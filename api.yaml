openapi: 3.0.1
info:
  title: Readings API
  description: >-
    REST API for the backend developer tests.  This API manages a series of
    fictional "readings" of two values.
  version: 1.0.1
servers:
  - url: 'http://localhost:8080'
paths:
  /reading:
    post:
      summary: >-
        Posts a new reading.  Each new reading must have a unique id.  No two readings with the same id should be accepted.
        
      requestBody:
        description: >-
          the reading object to be stored.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reading'
    
      responses:
        '200':
          description: >-
            the reading was added to the collection.
        '400':
          description: >-
            we got a duplicate id, malformed timestamp or invalid values.  add a message specifying what the error is.
        '500':
          description: >-
            server error ocurred.

    get:
      summary: >-
        Lists all the reading objects between the <start> and <end> timestamps
        (inclusive). An offset and limit parameter can be supplied if necessary.
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date-time
          description: >-
            optional start timestamp in iso8601 format (ex.
            1970-01-01T00:00:00+00:00)
          example: '1970-01-01T00:00:00+00:00'
        - in: query
          name: end
          schema:
            type: string
            format: date-time
          description: >-
            optional end timestamp in iso8601 format (ex.
            2070-01-01T00:00:00+00:00)
          example: '2070-01-01T00:00:00+00:00'
        - in: query
          name: offset
          schema:
            type: number
          description: >-
            the number of items to skip from the beginning of the collection
            (optional)
        - in: query
          name: limit
          schema:
            type: number
          description: the total number of items to be returned (optional)
      responses:
        '200':
          description: successful response
          headers:
            X-Total-Count:
              schema:
                type: number
              description: >-
                the total number of records within the start/end range, before
                offset and limit are applied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reading'
        '400':
          description: >-
            error parsing request parameters, remember that the start/end dates
            should be formatted as ISO8601
        '500':
          description: >-
            server error ocurred.

components:
  schemas:
    reading:
      type: object
      required:
        - id
        - timestamp
        - value1
        - value2
      properties:
        id:
          type: string
          description: Unique identifier of the reading
          example: 34114e6f-75d6-481e-a306-bea345b55002
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 formatted date time
          example: '2018-09-21T16:50:00+00:00'
        value1:
          type: number
          format: float
          description: value 1 of the reading
          example: 3.21
        value2:
          type: number
          format: float
          description: value 2 of the reading
          example: 8.53

